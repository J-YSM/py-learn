####################################################
# SETTING UP GITHUB FROM LOCAL REPO
#####################################################
# go to uninit folder
git init

# add them to staging
git add

# commit staging files with message 
git commit -m "First Commit"

# copy remote repository URL (or local remote or remote server)
git remote add origin https://github.com/J-YSM/py-learn
# verify new remote URL
git remote -v

# push changes from local repository to GitHub(for all dir under master)
git push origin master

####################################################
# DAILY TASKS
#####################################################

# check all pushes with mesages
git reflog --date=iso

# show the differences between local and HEAD
git status
# add all/ one file to staging and commit and push
git add . / git add <filename>
git commit -m "misc...."
git push origin master

# show all pushed commits w messages
$ git log
$ git log --graph --all --decorate


# pull single file from HEAD
git checkout <HEAD or branch version> <filepath with extension>
$ git checkout HEAD Learn-Python-The-Hard-Way/README.md

# is HEAD pointing to master?
$ git symbolic-ref HEAD

# push changes from local repository to GitHub(for all dir under master)
git push origin master
# otherwise
git push origin

# revert to older branch
git log --oneline
git checkout <branch code first 7 letters e.g. 0c02914>
#revert to master
# OTHERWISE, HEAD is detached and not to master (aka latest branch), and cannot push
git checkout master

# retrieve a file from a older branch
git log --oneline
git checkout <branchname> -- .../filepath
git checkout 0c02914 -- README.md

# unstage staged changes
git reset




####################################################
# ACCESS
#####################################################

# change from HTTPS to SSH
git remote set-url origin git@github.com:J-YSM/py-learn.git

# check git SSH key
$ eval "$(ssh-agent -s)"
$ ssh-add -l
# if agent no identities, generate new SSH key
# https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/
$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
$ ssh-add ~/.ssh/id_rsa
$ clip < ~/.ssh/id_rsa.pub 
# Copies the contents of the id_rsa.pub file to your clipboard


Justin@Justin-PC MINGW64 ~/Documents/GitHub/py-learn (master)
$ ssh-keygen -t rsa -b 4096 -C "yeoshuiming@gmail.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/Justin/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/Justin/.ssh/id_rsa.
Your public key has been saved in /c/Users/Justin/.ssh/id_rsa.pub.

The key fingerprint is:
SHA256:asdbAx60pa2342323g23g23g8i0f7scHUYvo yeoshuiming@gmail.com
The key's randomart image is:
+---[RSA 4096]----+
|  . .   .        |
| . o . o .       |
|  o * + .        |
| . B * . s       |
|. o O . S        |
|o..X .   .       |
|+Oo.F            |
|X+== +           |
|BXO.R            |
+----[SHA256]-----+
Justin@Justin-PC MINGW64 ~/Documents/GitHub/py-learn (master)
$ ssh-add ~/.ssh/id_rsa
Identity added: /c/Users/Justin/.ssh/id_rsa (/c/Users/Justin/.ssh/id_rsa)

# try connecting with all keys
$ ssh -vT git@github.com



